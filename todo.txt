NEXT - write tests for all functions

position_abundances imputed values are slightly too high.
    Due to empty values perhaps?

most of the warnings are from _calculate_metrics SL



Check all constraints



Lots of protein q value matches like this:
ANOVA metrics match for abundances normalised log2_mean for Q13505 for q_value reading 0.6462170052202973 vs 0.7023935403984614

Ptest has been archived, get rid of it
Add code to return a message if no flags are supplied
Study and get rid of total_protein_index.json? It seems to be a mishmash of various
    sources downloaded. Probably not all of it is required.
Study all the SL phospho errors
_add_protein_annotations and _get_kinase_predictions should be excluded unless I can
    figure out what they do.



Replace the linear imputation with a better version and with-bugs for the old
Wrap all code that have the not i % 1000 in a function then wrap that in a decorator?
Add admin app
Write unit tests for _calculate_metrics and _calculate_ANOVA
Go through the code and make it work with no records created for empty values
    in import_protein and import_phospho
Move fetching of gene_name and protein_name to import_protein
Review the code to decide if imports should set missing values to no record, None or 0
Study all the SL phospho errors
Find a way to assess how sparse the data sets are
min-max and imputed values are calculated differently between protein and phospho in ICR
    Which way is the correct way?
Add 'peptide_abundances' to phospho output?
When looking up gene names, try all the uniprot accessions for the protein.
    They all refer to the same protein.
In ICR of the imputed protein values are flagged "experimental", none are imputed.
    Strip out imputation code? Check phospho with ICR?
Find out which functions aren't actually needed
Move functions out of command file and into a lib dir
process/management/commands/process.py:44: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]
    Higher level of mypy checking required? Check work.
I have no idea what PepTools_annotations is about
    or protein-phospho-correlation
    or phosho-protein-cfc_ratio


### Later

Validate all the various statistical calculations
Change dockerfile to not have to run the env after start
The docker config for the cc_processor keeps the shell alive, but it then does nothing.
    How to improve this?



Base info
    "gene_name": "TATDN2",
    "protein_name": "Putative deoxyribonuclease TATDN2",
    "protein_info": {
        "tier": "etc",
        "localisation_info": {
            "basic_localisation": [
                "Nucleus"
            ],
            "localisation_keyword": [
                "Nucleus"
            ]
        },
    },

Calculations
protein:

    "metrics 0-max": "curve_peak etc., no anova, no fisherG"
    "metrics log2_mean": "all"
    "protein_abundances raw": "all abundances"
    "protein_abundances imputed": "all abundances"
    "protein_abundances normalised": "all abundances"
    "protein_abundances 0-max": "all abundances"
    "protein_abundances median": "all abundances"
    "protein_abundances min-max": "all abundances"
    "protein_abundances log2_mean": "all abundances"
    "protein_abundances log2 arrest": "all abundances"

phospho:
    Base:

    mod (phosphosite?)
    "phosphorylation_site": "S51",
    "PepTools_annotations": {
                "Accessibility_raw": 0.991,
                "SS_alphafold": 0.00234,
                "Motif": "",
                "Peptide": "RSASRSGGPSSPKRLKAQKED",
                "peptide_seq": "SGGPSSPKRLK",
                "Accessibility": 0.855,
                "Domain": "-",
                "Modification": "Phosphorylation_Q93075_42 | Phosphorylation_Q93075_44 | Phosphorylation_Q93075_46 | Phosphorylation_Q93075_50 | Methylation_Q93075_56 | "
            },
            "kinase_prediction": {
                "peptide_seq": "SGGPSSPKRLK",
                "consenus_motif_match": [
                    "cdk",
                    "stp_consensus"
                ]
            },

    Calculations:

    "metrics 0-max": "curve_peak etc., no anova, no fisherG"
    "metrics log2_mean": "curve_peak etc., anova, no fisherG"
    "phospho_regression 0-max metrics": # Unusual!
        "phosho-protein-cfc_ratio": 1.1062447313263493,
        "protein-phospho-correlation": -0.4276729297801326

    "phospho_regression log2_mean": "all abundances"
    "phospho_regression log2_mean metrics": "no standard, anova and fisher only"
    "phospho_regression position_abundances raw": "all abundances"
    "phospho_regression position_abundances imputed": "all abundances"
    "phospho_regression position_abundances normalised 0-max": "all abundances"
    "phospho_regression position_abundances normalised median": "all abundances"
    "phospho_regression position_abundances normalised min-max": "all abundances"
    "phospho_regression position_abundances normalised log2_mean": "all abundances"
    "phospho_regression position_abundances normalised log2 arrest": "all abundances"
    "protein_oscillation_abundances 0-max": "all abundances"
    "protein_oscillation_abundances 0-max metrics": "curve peak etc. no anova no fisher"
    "protein_oscillation_abundances log2_mean": "all abundances"
    "protein_oscillation_abundances log2_mean metrics": "all"





{
    "gene_name": "TATDN2",
    "protein_name": "Putative deoxyribonuclease TATDN2",
    "metrics": {
        "0-max": {
            "curve_peak": "etc"
        },
        "log2_mean": {
            "curve_peak": "etc"
            "ANOVA": {
                "p_value": "etc"
            },
            "Fisher G": {
                "p_value": "etc"
            },
        }
    },
    "protein_info": {
        "tier": "etc",
        "localisation_info": {
            "basic_localisation": [
                "Nucleus"
            ],
            "localisation_keyword": [
                "Nucleus"
            ]
        },
    },
    "protein_abundances": {
        "raw": {
            "abundances": "all"
        },
        "imputed": {
            "abundances": "all"
        },
        "normalised": {
            "0-max": {
                "abundances": "all"
            },
            "median": {
                "abundances": "all"
            },
            "min-max": {
                "abundances": "all"
            },
            "log2_mean": {
                "abundances": "all"
            },
            "log2 arrest": {
                "abundances": "all"
            }
        }
    },
    "phosphorylation_abundances": {
        "51": {
            "phosphorylation_site": "S51",
            "metrics": {
                "0-max": {
                    "curve_peak": "etc",
                },
                "log2_mean": {
                    "curve_peak": "etc",
                    "ANOVA": {
                        "p_value": "etc",
                    },
                }
            },
            "phospho_regression": {
                "0-max": {
                    "metrics": {
                        "phosho-protein-cfc_ratio": 1.1062447313263493,
                        "protein-phospho-correlation": -0.4276729297801326
                    }
                },
                "log2_mean": {
                    "abundances": "all"
                    "metrics": {
                        "ANOVA": {
                            "p_value": "etc"
                        },
                        "Fisher_G": {
                            "p_value": "etc"
                        }
                    },
                }
            },
            "position_abundances": {
                "raw": {
                    "abundances": "all"
                },
                "imputed": {
                    "abundances": "all"
                },
                "normalised": {
                    "0-max": {
                        "abundances": "all"
                    },
                    "median": {
                        "abundances": "all"
                    },
                    "min-max": {
                        "abundances": "all"
                    },
                    "log2_mean": {
                        "abundances": "all"
                    },
                    "log2 arrest": {
                        "abundances": "all"
                    }
                }
            },
            "protein_oscillation_abundances": {
                "0-max": {
                    "abundances": "all"
                    "metrics": {
                        "curve_peak": "etc",
                    },
                },
                "log2_mean": {
                    "abundances": "all"
                    "metrics": {
                        "curve_peak": "etc",
                        "ANOVA": {
                            "p_value": "etc"
                        },
                        "Fisher_G": {
                            "p_value": "etc"
                        },
                    },
                }
            }
        }
    }
}
