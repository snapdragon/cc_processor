# Generated by Django 5.2.1 on 2025-07-23 11:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('with_bugs', models.BooleanField(default=False)),
                ('processable', models.BooleanField(default=False)),
                ('proteome_file', models.CharField(max_length=255)),
                ('phosphoproteome_file', models.CharField(max_length=255)),
                ('proteome_file_accession_number_column_name', models.CharField(max_length=255)),
                ('protein_go_list', models.JSONField(blank=True, null=True)),
                ('phospho_protein_go_list', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatisticType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PeptideStartPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=255)),
                ('peptide', models.CharField(max_length=255)),
                ('start_position', models.IntegerField()),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('accession_number', 'peptide'), name='unique_accession_peptide')],
            },
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=255)),
                ('is_contaminant', models.BooleanField(default=False)),
                ('relevant', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protein_project', to='process.project')),
            ],
        ),
        migrations.CreateModel(
            name='Phospho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mod', models.CharField(max_length=255)),
                ('phosphosite', models.CharField(max_length=255, null=True)),
                ('relevant', models.BooleanField(default=False)),
                ('protein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phospho_protein', to='process.protein')),
            ],
        ),
        migrations.CreateModel(
            name='Replicate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('mean', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replicate_project', to='process.project')),
            ],
        ),
        migrations.CreateModel(
            name='SampleStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rank', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_stage_project', to='process.project')),
            ],
        ),
        migrations.CreateModel(
            name='ColumnName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('replicate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_stage_replicate', to='process.replicate')),
                ('sample_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='column_name_sample_stage', to='process.samplestage')),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metrics', models.JSONField(blank=True, null=True)),
                ('phospho', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statistic_phospho', to='process.phospho')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statistic_project', to='process.project')),
                ('protein', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='statistic_protein', to='process.protein')),
                ('statistic_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistic_type', to='process.statistictype')),
            ],
        ),
        migrations.CreateModel(
            name='Abundance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.FloatField(blank=True, null=True)),
                ('replicate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abundance_replicate', to='process.replicate')),
                ('sample_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abundance_sample_stage', to='process.samplestage')),
                ('statistic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abundance_statistic', to='process.statistic')),
            ],
        ),
        migrations.CreateModel(
            name='UniprotData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.CharField(max_length=255)),
                ('gene_name', models.CharField(max_length=255)),
                ('protein_name', models.CharField(max_length=255)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('accession_number',), name='unique_uniprot_data_accession_number')],
            },
        ),
        migrations.AddConstraint(
            model_name='protein',
            constraint=models.UniqueConstraint(fields=('project', 'accession_number'), name='unique_project_accession_number'),
        ),
        migrations.AddConstraint(
            model_name='phospho',
            constraint=models.UniqueConstraint(fields=('protein', 'mod'), name='unique_protein_mod'),
        ),
        migrations.AddConstraint(
            model_name='replicate',
            constraint=models.UniqueConstraint(fields=('project', 'name'), name='unique_replicate_project_name'),
        ),
        migrations.AddConstraint(
            model_name='samplestage',
            constraint=models.UniqueConstraint(fields=('project', 'name'), name='unique_sample_stage_project_name'),
        ),
        migrations.AddConstraint(
            model_name='columnname',
            constraint=models.UniqueConstraint(fields=('name', 'replicate', 'sample_stage'), name='unique_name_replicate_sample_stage'),
        ),
        migrations.AddConstraint(
            model_name='statistic',
            constraint=models.UniqueConstraint(condition=models.Q(('protein__isnull', True), ('phospho__isnull', True)), fields=('statistic_type', 'project'), name='unique_statistic_by_type_and_project'),
        ),
        migrations.AddConstraint(
            model_name='statistic',
            constraint=models.UniqueConstraint(condition=models.Q(('project__isnull', True), ('phospho__isnull', True)), fields=('statistic_type', 'protein'), name='unique_statistic_by_type_and_protein'),
        ),
        migrations.AddConstraint(
            model_name='statistic',
            constraint=models.UniqueConstraint(condition=models.Q(('project__isnull', True), ('protein__isnull', True)), fields=('statistic_type', 'phospho'), name='unique_statistic_by_type_and_phospho'),
        ),
    ]
