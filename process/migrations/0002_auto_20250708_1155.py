# Generated by Django 5.2.1 on 2025-05-31 15:36

from django.db import migrations

from process.constants import (
    PROTEIN_MEDIAN,
    PHOSPHO_MEDIAN,

    ZERO_MAX,
    LOG2_MEAN,
    ABUNDANCES_RAW,
    ABUNDANCES_IMPUTED,

    ABUNDANCES_NORMALISED_ZERO_MAX,
    ABUNDANCES_NORMALISED_MEDIAN,
    ABUNDANCES_NORMALISED_MIN_MAX,
    ABUNDANCES_NORMALISED_LOG2_MEAN,
    ABUNDANCES_NORMALISED_LOG2_ARREST,

    PHOSPHO_REGRESSION_ZERO_MAX,
    PHOSPHO_REGRESSION_LOG2_MEAN,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_RAW,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_IMPUTED,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_ZERO_MAX,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_MEDIAN,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_MIN_MAX,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_LOG2_MEAN,
    PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_LOG2_ARREST,

    PROTEIN_OSCILLATION_ABUNDANCES_ZERO_MAX,
    PROTEIN_OSCILLATION_ABUNDANCES_LOG2_MEAN,

    SL_SAMPLE_STAGE_NAME_1,
    SL_SAMPLE_STAGE_NAME_2,
    SL_SAMPLE_STAGE_NAME_3,
    SL_SAMPLE_STAGE_NAME_4,
    SL_SAMPLE_STAGE_NAME_5,
    SL_SAMPLE_STAGE_NAME_6,
    SL_SAMPLE_STAGE_NAME_7,
    SL_SAMPLE_STAGE_NAME_8,
    SL_SAMPLE_STAGE_NAME_9,
    SL_SAMPLE_STAGE_NAME_10,

    ABUNDANCE_REP_1,
    ABUNDANCE_REP_2
)


class Migration(migrations.Migration):
    def add_initial_data(apps, schema_editor):
        Project = apps.get_model("process", "Project")
        proj = Project.objects.create(
            name="SL",
            proteome_file="Soliman/results-request-2023MK001-proteome.xlsx",
            phosphoproteome_file="Soliman/results-request-2023MK004-phosphoproteome.xlsx",
            proteome_file_accession_number_column_name="Protein.Group",
        )

        Replicate = apps.get_model("process", "Replicate")
        replicate_1 = Replicate.objects.create(name="One", project=proj, mean=False)
        replicate_2 = Replicate.objects.create(name="Two", project=proj, mean=False)
        replicate_3 = Replicate.objects.create(name="Three", project=proj, mean=False)
        _ = Replicate.objects.create(name="Mean", project=proj, mean=True)

        SampleStage = apps.get_model("process", "SampleStage")
        sample_stage_1 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_1, rank=1
        )
        sample_stage_2 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_2, rank=2
        )
        sample_stage_3 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_3, rank=3
        )
        sample_stage_4 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_4, rank=4
        )
        sample_stage_5 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_5, rank=5
        )
        sample_stage_6 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_6, rank=6
        )
        sample_stage_7 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_7, rank=7
        )
        sample_stage_8 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_8, rank=8
        )
        sample_stage_9 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_9, rank=9
        )
        sample_stage_10 = SampleStage.objects.create(
            project=proj, name=SL_SAMPLE_STAGE_NAME_10, rank=10
        )

        ColumnName = apps.get_model("process", "ColumnName")
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_1,
            name="IITI_001",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_2,
            name="IITI_002",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_3,
            name="IITI_003",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_4,
            name="IITI_004",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_5,
            name="IITI_005",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_6,
            name="IITI_006",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_7,
            name="IITI_007",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_8,
            name="IITI_008",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_9,
            name="IITI_009",
        )
        ColumnName.objects.create(
            replicate=replicate_1,
            sample_stage=sample_stage_10,
            name="IITI_010",
        )

        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_1,
            name="IITI_011",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_2,
            name="IITI_012",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_3,
            name="IITI_013",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_4,
            name="IITI_014",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_5,
            name="IITI_015",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_6,
            name="IITI_016",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_7,
            name="IITI_017",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_8,
            name="IITI_018",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_9,
            name="IITI_019",
        )
        ColumnName.objects.create(
            replicate=replicate_2,
            sample_stage=sample_stage_10,
            name="IITI_020",
        )

        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_1,
            name="IITI_021",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_2,
            name="IITI_022",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_3,
            name="IITI_023",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_4,
            name="IITI_024",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_5,
            name="IITI_025",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_6,
            name="IITI_026",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_7,
            name="IITI_027",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_8,
            name="IITI_028",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_9,
            name="IITI_029",
        )
        ColumnName.objects.create(
            replicate=replicate_3,
            sample_stage=sample_stage_10,
            name="IITI_030",
        )

        # Config for Institute of Cancer Research project
        project_ICR = Project.objects.create(
            name="ICR",
            proteome_file="ICR/CR07_TMT16plex_FullProt_Proteins.xlsx",
            phosphoproteome_file="ICR/20210610_CR07_IMAC_PeptideGroups.tdt",
            proteome_file_accession_number_column_name="Accession",
        )

        replicate_ICR_1 = Replicate.objects.create(
            name=ABUNDANCE_REP_1, project=project_ICR, mean=False
        )
        replicate_ICR_2 = Replicate.objects.create(
            name=ABUNDANCE_REP_2, project=project_ICR, mean=False
        )
        _ = Replicate.objects.create(
            name="abundance_average", project=project_ICR, mean=True
        )

        sample_stage_ICR_1 = SampleStage.objects.create(
            project=project_ICR, name="Palbo", rank=1
        )
        sample_stage_ICR_2 = SampleStage.objects.create(
            project=project_ICR, name="Late G1_1", rank=2
        )
        sample_stage_ICR_3 = SampleStage.objects.create(
            project=project_ICR, name="G1/S", rank=3
        )
        sample_stage_ICR_4 = SampleStage.objects.create(
            project=project_ICR, name="S", rank=4
        )
        sample_stage_ICR_5 = SampleStage.objects.create(
            project=project_ICR, name="S/G2", rank=5
        )
        sample_stage_ICR_6 = SampleStage.objects.create(
            project=project_ICR, name="G2_2", rank=6
        )
        sample_stage_ICR_7 = SampleStage.objects.create(
            project=project_ICR, name="G2/M_1", rank=7
        )
        sample_stage_ICR_8 = SampleStage.objects.create(
            project=project_ICR, name="M/Early G1", rank=8
        )

        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_1,
            name="Abundance: 126, 1, 0",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_2,
            name="Abundance: 127N, 1, 2",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_3,
            name="Abundance: 127C, 1, 4",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_4,
            name="Abundance: 128N, 1, 6",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_5,
            name="Abundance: 128C, 1, 8",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_6,
            name="Abundance: 129N, 1, 10",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_7,
            name="Abundance: 129C, 1, 12",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_1,
            sample_stage=sample_stage_ICR_8,
            name="Abundance: 130N, 1, 15",
        )

        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_1,
            name="Abundance: 130C, 2, 0",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_2,
            name="Abundance: 131N, 2, 2",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_3,
            name="Abundance: 131C, 2, 4",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_4,
            name="Abundance: 132N, 2, 6",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_5,
            name="Abundance: 132C, 2, 8",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_6,
            name="Abundance: 133N, 2, 10",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_7,
            name="Abundance: 133C, 2, 12",
        )
        ColumnName.objects.create(
            replicate=replicate_ICR_2,
            sample_stage=sample_stage_ICR_8,
            name="Abundance: 134N, 2, 15",
        )




        # Config for importing ICR results
        project_original = Project.objects.create(
            name="Original",
            proteome_file="N/A",
            phosphoproteome_file="N/A",
            proteome_file_accession_number_column_name="N/A",
        )

        replicate_original_1 = Replicate.objects.create(
            name=ABUNDANCE_REP_1, project=project_original, mean=False
        )
        replicate_original_2 = Replicate.objects.create(
            name=ABUNDANCE_REP_2, project=project_original, mean=False
        )
        replicate_original_3 = Replicate.objects.create(
            name="abundance_average", project=project_original, mean=True
        )

        sample_stage_original_1 = SampleStage.objects.create(
            project=project_original, name="Palbo", rank=1
        )
        sample_stage_original_2 = SampleStage.objects.create(
            project=project_original, name="Late G1_1", rank=2
        )
        sample_stage_original_3 = SampleStage.objects.create(
            project=project_original, name="G1/S", rank=3
        )
        sample_stage_original_4 = SampleStage.objects.create(
            project=project_original, name="S", rank=4
        )
        sample_stage_original_5 = SampleStage.objects.create(
            project=project_original, name="S/G2", rank=5
        )
        sample_stage_original_6 = SampleStage.objects.create(
            project=project_original, name="G2_2", rank=6
        )
        sample_stage_original_7 = SampleStage.objects.create(
            project=project_original, name="G2/M_1", rank=7
        )
        sample_stage_original_8 = SampleStage.objects.create(
            project=project_original, name="M/Early G1", rank=8
        )






        StatisticType = apps.get_model("process", "StatisticType")

        StatisticType.objects.create(
            name=ABUNDANCES_RAW,
        )
        StatisticType.objects.create(
            name=PROTEIN_MEDIAN,
        )
        StatisticType.objects.create(
            name=PHOSPHO_MEDIAN,
        )

        StatisticType.objects.create(
            name=ZERO_MAX,
        )
        StatisticType.objects.create(
            name=LOG2_MEAN,
        )

        StatisticType.objects.create(
            name=ABUNDANCES_IMPUTED,
        )

        StatisticType.objects.create(
            name=ABUNDANCES_NORMALISED_ZERO_MAX,
        )
        StatisticType.objects.create(
            name=ABUNDANCES_NORMALISED_MEDIAN,
        )
        StatisticType.objects.create(
            name=ABUNDANCES_NORMALISED_MIN_MAX,
        )
        StatisticType.objects.create(
            name=ABUNDANCES_NORMALISED_LOG2_MEAN,
        )
        StatisticType.objects.create(
            name=ABUNDANCES_NORMALISED_LOG2_ARREST,
        )

        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_ZERO_MAX,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_LOG2_MEAN,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_RAW,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_IMPUTED,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_ZERO_MAX,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_MEDIAN,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_MIN_MAX,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_LOG2_MEAN,
        )
        StatisticType.objects.create(
            name=PHOSPHO_REGRESSION_POSITION_ABUNDANCES_NORMALISED_LOG2_ARREST,
        )

        StatisticType.objects.create(
            name=PROTEIN_OSCILLATION_ABUNDANCES_ZERO_MAX,
        )
        StatisticType.objects.create(
            name=PROTEIN_OSCILLATION_ABUNDANCES_LOG2_MEAN,
        )

    dependencies = [
        ("process", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_initial_data),
    ]
